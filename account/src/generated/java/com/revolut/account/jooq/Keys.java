/*
 * This file is generated by jOOQ.
 */
package com.revolut.account.jooq;


import com.revolut.account.jooq.tables.Accounts;
import com.revolut.account.jooq.tables.Books;
import com.revolut.account.jooq.tables.records.AccountsRecord;
import com.revolut.account.jooq.tables.records.BooksRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
    public static final UniqueKey<BooksRecord> CONSTRAINT_3 = UniqueKeys0.CONSTRAINT_3;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BooksRecord, AccountsRecord> CONSTRAINT_3C = ForeignKeys0.CONSTRAINT_3C;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> CONSTRAINT_A = Internal.createUniqueKey(Accounts.ACCOUNTS, "CONSTRAINT_A", Accounts.ACCOUNTS.ID);
        public static final UniqueKey<BooksRecord> CONSTRAINT_3 = Internal.createUniqueKey(Books.BOOKS, "CONSTRAINT_3", Books.BOOKS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<BooksRecord, AccountsRecord> CONSTRAINT_3C = Internal.createForeignKey(com.revolut.account.jooq.Keys.CONSTRAINT_A, Books.BOOKS, "CONSTRAINT_3C", Books.BOOKS.ACCOUNT_ID);
    }
}
