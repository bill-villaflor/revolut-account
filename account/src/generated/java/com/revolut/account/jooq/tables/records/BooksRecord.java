/*
 * This file is generated by jOOQ.
 */
package com.revolut.account.jooq.tables.records;


import com.revolut.account.jooq.tables.Books;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksRecord extends UpdatableRecordImpl<BooksRecord> implements Record5<UUID, BigDecimal, BigDecimal, UUID, OffsetDateTime> {

    private static final long serialVersionUID = 2131971011;

    /**
     * Setter for <code>PUBLIC.BOOKS.ID</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.BOOKS.ID</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>PUBLIC.BOOKS.DEBIT</code>.
     */
    public void setDebit(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.BOOKS.DEBIT</code>.
     */
    public BigDecimal getDebit() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>PUBLIC.BOOKS.CREDIT</code>.
     */
    public void setCredit(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.BOOKS.CREDIT</code>.
     */
    public BigDecimal getCredit() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>PUBLIC.BOOKS.ACCOUNT_ID</code>.
     */
    public void setAccountId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.BOOKS.ACCOUNT_ID</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>PUBLIC.BOOKS.CREATION_DATE</code>.
     */
    public void setCreationDate(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.BOOKS.CREATION_DATE</code>.
     */
    public OffsetDateTime getCreationDate() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UUID, BigDecimal, BigDecimal, UUID, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<UUID, BigDecimal, BigDecimal, UUID, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return Books.BOOKS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return Books.BOOKS.DEBIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Books.BOOKS.CREDIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field4() {
        return Books.BOOKS.ACCOUNT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field5() {
        return Books.BOOKS.CREATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getDebit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getCredit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component4() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component5() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getDebit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getCredit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value4() {
        return getAccountId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value5() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord value2(BigDecimal value) {
        setDebit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord value3(BigDecimal value) {
        setCredit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord value4(UUID value) {
        setAccountId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord value5(OffsetDateTime value) {
        setCreationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BooksRecord values(UUID value1, BigDecimal value2, BigDecimal value3, UUID value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksRecord
     */
    public BooksRecord() {
        super(Books.BOOKS);
    }

    /**
     * Create a detached, initialised BooksRecord
     */
    public BooksRecord(UUID id, BigDecimal debit, BigDecimal credit, UUID accountId, OffsetDateTime creationDate) {
        super(Books.BOOKS);

        set(0, id);
        set(1, debit);
        set(2, credit);
        set(3, accountId);
        set(4, creationDate);
    }
}
